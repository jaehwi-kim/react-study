{"version":3,"sources":["images/logo.png","images/user_img.png","images/QPEAK_G4_1.jpg","components/mainFrame/Header.js","components/mainFrame/Navbar.js","components/mainFrame/Footer.js","components/system/EnergyCard.js","components/system/EnergyCards.js","components/system/MapAPI.js","components/system/SystemInfo.js","components/system/System.js","components/logical/List.js","components/logical/Detail.js","components/logical/Module.js","components/logical/groupBy.js","components/logical/String.js","components/logical/Layout.js","components/logical/TLChart.js","components/logical/TimeLapse.js","components/logical/Logical.js","components/graph/GPChart.js","components/graph/GraphDetail.js","components/graph/Graph.js","components/mainFrame/MainFrame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","onClick","setNavOpen","navOpen","style","cursor","to","src","logo","height","alt","Dropdown","Toggle","variant","id","icon","faUser","size","Menu","Item","href","Navbar","Nav","vertical","user_img","width","fontSize","name","location","NavItem","bottom","NavLink","Footer","faPhoneAlt","faMapMarkerAlt","EnergyCard","card","value","end","parseInt","duration","EnergyCards","gatewayId","useState","currentPower","setCurrentPower","energyToday","setEnergyToday","energyMonth","setEnergyMonth","energyLifeTime","setEnergyLifeTime","useEffect","getCurrentPowerData","a","url","axios","get","response","data","power","console","log","getEnergyToday","totalwh","getEnergyMonth","getEnergyLiftTime","cards","map","key","libraries","mapContainerStyle","center","lat","lng","options","zoomControl","MapAPI","useLoadScript","googleMapsApiKey","isLoaded","loadError","time","Date","markers","setMarkers","selected","setSelected","onMapClick","useCallback","event","current","latLng","mapRef","useRef","onMapLoad","zoom","mapTypeId","onLoad","marker","toISOString","position","onCloseClick","formatRelative","SystemInfo","border","margin","textAlign","panel","padding","borderLeft","color","Table","Object","keys","sysData","i","System","overview","sampleData","Gateway","devices","tempKeys","tempVals","values","val","tk","filter","includes","tempData","assign","n","index","top","List","sample","gateway","strings","Strings","mainList","idSerialNoOfString","device","info","serialNo","modules","Modules","mS","moduleSerial","modules2","expanded","setExpanded","selectedGtid","selectedStid","selectedSn","expandedModule","forEach","mod","m","marginRight","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultSelected","defaultExpanded","TreeItem","nodeId","label","setGtid","undefined","setItemType","onIconClick","idsn","setStid","onLabelClick","nM","index2","setSn","Detail","gatewayInfo","gatewayData","push","getGatewayData","stInfo","st","stringInfo","getSelectedStringData","getSelectedModuleData","Module","forwardRef","ref","stringIndex","mSerialNo","checked","display","backgroundColor","modulewatt","backgroundImage","backgroundSize","backgroundPosition","fontWeight","tabIndex","minWidth","modulevoltage","moduletemperature","groupBy","list","keyGetter","Map","item","collection","set","String","grouped","setGrouped","d","md_sn","marginLeft","stid","stringwatt","stringvoltage","stringtemperature","j","Number","Layout","st_id","idOfString","scrollEl","totalwatt","defaultValue","scale","translation","x","y","minScale","showControls","btnClass","flexWrap","React","memo","isPlaying","setPlay","intervalId","setIntervalId","chart","myData","arr","uniques","itemsFound","l","length","stringified","JSON","stringify","unique","graphData","xAxis","setExtremes","type","title","myProps","timeRange","text","curDate","slice","titleName","rangeSelector","enabled","navigator","plotLines","zIndex","align","rotation","series","plotOptions","point","events","mouseOver","this","setPoint","area","states","hover","highcharts","Highcharts","constructorType","endIdx","clearInterval","intId","setInterval","addPlotLine","removePlotLine","playAxis","alignSelf","faStop","faPlay","TimeLapse","curPoint","setGraphData","weekDates","setWeekDates","tempDates","setCurTime","toString","prevStidRef","prevSnRef","prevStid","prevSn","temp","endts","Button","outline","setTimeRange","onChange","date","setcurDate","highlightDates","dateFormat","showMonthYearPicker","Logical","curTime","focusEl","setData","setGatewayData","timeGroupedData","setTimeGroupedData","tempDate","getTime","getData","alert","Spinner","marginTop","overflow","flex","setChartData","setChartTitle","buttons","verticalAlign","buttonPosition","inputPosition","dateTimeLabelFormats","day","colors","split","GraphDetail","activeTab","setActiveTab","tabs","Array","from","idx","classnames","active","tab","TabContent","TabPane","tabId","Row","Col","sm","selectedItemType","toDateString","Graph","totalwh_delta","xcategories","toUTCString","watt_avg","stringwatt_avg","stringvoltage_avg","temperature_avg","modulewatt_avg","modulevoltage_avg","moduletemperature_avg","flexGrow","MainFrame","systemData","setSystemData","jsonObj","parse","information","TABS","path","render","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.893b3da6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7b1abf14.png\";","module.exports = __webpack_public_path__ + \"static/media/user_img.be0c4035.png\";","module.exports = __webpack_public_path__ + \"static/media/QPEAK_G4_1.97d0ce52.jpg\";","import React, { useState } from \"react\";\nimport logo from \"../../images/logo.png\";\nimport \"../../styles/common.css\";\nimport \"./Header.css\";\nimport { Link } from 'react-router-dom';\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst Header = (props) => {\n\n  return (\n    <>\n      <div className=\"modal-header border-bottom-primary\">\n        <div className=\"col\">\n          <MenuIcon onClick={() => {props.setNavOpen(!props.navOpen)}} style={{ cursor: \"pointer\" }}></MenuIcon>\n          <Link to=\"/system\" className=\"nav-link d-inline\">\n            <img src={logo} height=\"40px\" alt=\"\"/>\n          </Link>\n        </div>\n\n        <Dropdown>\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n          <FontAwesomeIcon icon={faUser} size=\"2x\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#\">Logout</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </>\n  );\n};\nexport default Header;\n","import React, {  } from \"react\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport user_img from \"../../images/user_img.png\";\nimport \"../../styles/common.css\";\n\nconst Navbar = (props) => {\n\n  return (\n    <div className={props.navOpen ? \"translate-enter\" : \"translate-exit\"}>\n      <Nav\n        vertical\n        className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion h-100\"\n      >\n        <div className=\"sidebar-brand d-flex align-items-center justify-content-center flex-column h-auto\">\n          <div>\n            <img\n              src={user_img}\n              className=\"img-profile rounded-circle\"\n              width=\"50%\"\n              alt=\"userImg\"\n            />\n          </div>\n          <div style={{ fontSize: \"2.5vh\"}}>{props.name}</div>\n          <div style={{ fontSize: \"2vh\"}}>{props.location}</div>\n        </div>\n        <hr className=\"sidebar-divider\" />\n        <NavItem className=\"nav-item\">\n          <Link to=\"/system\" className=\"nav-link\">System</Link>\n        </NavItem>\n        <hr className=\"sidebar-divider\" />\n        <NavItem className=\"nav-item\">\n          <Link to=\"/logical\" className=\"nav-link\">Logical Layout</Link>\n        </NavItem>\n        <hr className=\"sidebar-divider\" />\n        <NavItem className=\"nav-item\">\n          <Link to=\"/graph\" className=\"nav-link\">Graph</Link>\n        </NavItem>\n        <hr className=\"sidebar-divider\" />\n        <NavItem className=\"nav-item position-absolute\" style={{ bottom: \"13%\" }}>\n          <NavLink href=\"#\" className=\"text-center\">\n            <span style={{ fontSize: \"1.3rem\" }}>Logout</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../../styles/common.css\";\nimport \"./Footer.css\";\nimport { faPhoneAlt, faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"sticky-footer\">\n      <div className=\"container\">\n        <div className=\"copyright\">Copyright ⓒ Hanwha Qcells 2020</div>\n        <div className=\"tel\">\n          <FontAwesomeIcon icon={faPhoneAlt} />\n          010.1234.5678\n        </div>\n        <div className=\"location\">\n          <FontAwesomeIcon icon={faMapMarkerAlt} />\n          서울특별시 중구 을지로\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./EnergyCard.css\";\nimport \"../../styles/common.css\";\nimport CountUp from \"react-countup\";\n\nconst EnergyCard = ({ card }) => {\n  const { id, name, value } = card;\n  return (\n    <div className=\"d-flex flex-column align-content-center cardDiv\">\n      <div className=\"cardName font-weight-bold text-info text-uppercase mb-1\">\n        {name}\n      </div>\n      <div className=\"card border-left-info shadow card-mod justify-content-center\">\n        <div className=\"font-weight-bold text-gray-800\">\n          <CountUp end={parseInt(value)} duration={(id + 1) / 2} />\n          {name === \"Current Power\" ? \"W\" : \"kWh\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnergyCard;\n","import React, {useEffect, useState} from \"react\";\nimport EnergyCard from \"./EnergyCard\";\nimport \"../../styles/common.css\";\nimport axios from \"axios\";\n\nconst EnergyCards = ({gatewayId}) => {\n\n  const [currentPower, setCurrentPower] = useState(null);\n  const [energyToday, setEnergyToday] = useState(null);\n  const [energyMonth, setEnergyMonth] = useState(null);\n  const [energyLifeTime, setEnergyLifeTime] = useState(null);\n\n  useEffect(() => {\n    const getCurrentPowerData = async () => {\n      try {\n        let url = \"/api/sys/currentpower/\" + gatewayId;\n        const response = await axios.get(url);\n        setCurrentPower(response.data.power);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    const getEnergyToday = async () => {\n      try {\n        let url = \"/api/sys/energytoday/\" + gatewayId + \"/1588407606000\"\n        const response = await axios.get(url);\n        setEnergyToday(parseInt(response.data.totalwh/1000))\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    const getEnergyMonth = async () => {\n      try {\n        let url = \"/api/sys/energymonth/\" + gatewayId + \"/1588407606000\"\n        const response = await axios.get(url);\n        setEnergyMonth(parseInt(response.data.totalwh/1000))\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    const getEnergyLiftTime = async () => {\n      try {\n        let url = \"/api/sys/energylifetime/\" + gatewayId;\n        const response = await axios.get(url);\n        setEnergyLifeTime(parseInt(response.data.totalwh/1000))\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    getCurrentPowerData();\n    getEnergyToday();\n    getEnergyMonth();\n    getEnergyLiftTime();\n  }, [])\n\n  const cards = [\n    { id: 0, name: \"Current Power\", value: currentPower != null ? currentPower : \"0\"} ,\n    { id: 1, name: \"Energy Today\", value: energyToday != null ? energyToday : \"0\" },\n    { id: 2, name: \"Energy Month\", value: energyMonth != null ? energyMonth : \"0\" },\n    { id: 3, name: \"Lifetime Energy\", value: energyLifeTime != null ? energyLifeTime : \"0\" },\n  ];\n\n  return (\n    <div className=\"d-flex justify-content-center m-5 flex-wrap\">\n      {cards.map((card) => (\n        <EnergyCard card={card} key={card.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default EnergyCards;\n","import React, { useState, useCallback, useRef } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport { formatRelative } from \"date-fns\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"350px\",\n  height: \"250px\",\n};\n\nconst center = {\n  lat: 37.567415,\n  lng: 126.9864256,\n};\n\nconst options = {\n  zoomControl: true,\n};\n\nconst MapAPI = (props) => {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyD2azuh9RPIrUV2--NISbqbOB8LGM0d818\",\n    libraries,\n  });\n\n  const [markers, setMarkers] = useState([\n    {\n      lat: center.lat,\n      lng: center.lng,\n      time: new Date(),\n    },\n  ]);\n\n  const [selected, setSelected] = useState(null);\n\n  const onMapClick = useCallback((event) => {\n    setMarkers((current) => [\n      ...current,\n      {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  }, []);\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n    /*navigator.geolocation.getCurrentPosition(\n      (position) => {\n        map.panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        map.setZoom(18);\n        setMarkers([\n          {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            time: new Date(),\n          },\n        ]);\n      },\n      () => null\n    );*/\n  }, []);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n\n  return (\n    <div>\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={18}\n        center={center}\n        mapTypeId={\"satellite\"}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n        {markers.map((marker) => (\n          <Marker\n            key={marker.time.toISOString()}\n            position={{ lat: marker.lat, lng: marker.lng }}\n            onClick={() => {\n              setSelected(marker);\n            }}\n          />\n        ))}\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <div>\n              <p>position {selected.lat + \", \" + selected.lng}</p>\n              <p>marked {formatRelative(selected.time, new Date())}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default MapAPI;\n","import React from \"react\";\nimport \"../../styles/common.css\";\nimport { ListGroup, ListGroupItem, Table } from \"reactstrap\";\nimport { faSolarPanel } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MapAPI from \"./MapAPI\";\nimport panel from '../../images/QPEAK_G4_1.jpg';\n\nconst SystemInfo = (props) => {\n  return (\n    <div>\n      <div className=\"card shadow m-4\">\n        <div className=\"card-header py-2\">System Overview</div>\n        <div className=\"card-body d-flex justify-content-around align-items-center p-2 flex-wrap\">\n          {/*<div className=\"text-center\">*/}\n          <MapAPI />\n          <div>\n            {/* <FontAwesomeIcon\n              icon={faSolarPanel}\n              size=\"10x\"\n              style={{ margin: \"0.2em\" }}\n            /> */}\n            <div style={{width: \"260px\", height: \"260px\", border: \"1px solid #e0e2e6\", margin: \"10px\", textAlign: \"center\"}}>\n              <img src={panel} height=\"260px\" style={{padding:\"10px\"}}/>\n            </div>\n            <div\n              style={{\n                borderLeft: \"1px solid rgb(0,0,0,0.1)\",\n                height: \"100%\",\n              }}\n            ></div>\n          </div>\n          {/*</div>*/}\n          <div style={{ color: \"black\" }}>\n            <Table className=\"text-center\">\n              <tbody>\n              {/* <ListGroup> */}\n              {Object.keys(props.sysData).map((key, i) => {\n                return (\n                  // <ListGroupItem key={i}>\n                  //   {key}: {props.sysData[key]}\n                  // </ListGroupItem>\n                    <tr key={key}>\n                      <th>{key}</th>\n                      <td>{props.sysData[key]}</td>\n                    </tr>\n                );\n              })}\n              {/* </ListGroup> */}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemInfo;\n","import React from \"react\";\nimport EnergyCards from \"./EnergyCards\";\nimport SystemInfo from \"./SystemInfo\";\nimport \"../../styles/common.css\";\n\nconst System = (props) => {\n\n  //console.log(props.sampleData.Gateway);\n  const overview = props.sampleData.Gateway.devices[0];\n  const tempKeys = Object.keys(overview).map((key) => {\n    return typeof overview[key] === \"object\"\n      ? [key + \"-\" + Object.keys(overview[key])[0]]\n      : [key];\n  });\n  const tempVals = Object.values(overview).map((val) => {\n    return typeof val === \"object\" ? [Object.values(val)[0]] : [val];\n  });\n  const tk = tempKeys.filter((key) => !key[0].includes(\"Ts\"));\n  const tempData = Object.assign(\n    {},\n    ...tk.map((n, index) => ({ [n]: tempVals[index] }))\n  );\n  return (\n    <div\n      style={{\n        top: 0,\n        bottom: 0,\n        height: \"10%\",\n        margin: \"5% auto\",\n      }}\n    >\n      <div className=\"w-100 row d-flex justify-content-center flex-column align-items-center\">\n        <SystemInfo sysData={tempData}></SystemInfo>\n        <EnergyCards gatewayId={props.gatewayId}></EnergyCards>\n      </div>\n    </div>\n  );\n};\n\nexport default System;\n","import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\n\nconst List = (props) => {\n  let sample = props.sampleData.sampleData;\n  let gateway = sample.Gateway.devices[0];\n  let strings = sample.Strings;\n  let mainList = Object.keys(sample);\n  const idSerialNoOfString = strings.devices.map((device) => {\n    return { id: device.info.id, serialNo: device.info.serialNo };\n  });\n  let modules = strings.devices.map((device) =>\n    device.Modules.devices.map((mS) => mS.moduleSerial)\n  );\n\n  let modules2 = strings.devices.map((device) => {\n    return {\n      id: device.info.id,\n      modules: device.Modules.devices.map((mS) => mS.moduleSerial),\n    };\n  });\n\n  const [expanded, setExpanded] = useState([\"Strings\"]);\n  const [selected, setSelected] = useState(\"\");\n\n  useEffect(() => {\n    if (props.selectedGtid != null) {\n      setSelected(\"Gateway\");\n      setExpanded([\"Strings\"]);\n    } else if (props.selectedStid != null) {\n      setSelected(\"String\" + props.selectedStid);\n      setExpanded([\"Strings\"]);\n    } else if (props.selectedSn != null) {\n      setSelected(\"Module\" + props.selectedSn);\n      let expandedModule = null;\n      if (props.selectedSn != null) {\n        modules2.forEach(function (mod) {\n          mod.modules.forEach(function (m) {\n            if (props.selectedSn === m) {\n              expandedModule = [\"Strings\", \"String\" + mod.id];\n            }\n          });\n        });\n        setExpanded(expandedModule);\n      }\n    }\n  }, [props.selectedGtid, props.selectedStid, props.selectedSn]);\n\n  return (\n    <div className=\"card shadow mb-4\" style={{ marginRight: 20 }}>\n      <div className=\"card-header py-2\">List</div>\n      <div className=\"card-body\">\n        <TreeView\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n          defaultSelected=\"Gateway\"\n          defaultExpanded={[\"Strings\"]}\n          selected={selected}\n          expanded={expanded}\n        >\n          <TreeItem\n            key={mainList[0]}\n            nodeId={mainList[0]}\n            label={\"Gateway\"}\n            onClick={() => {\n              props.setGtid(gateway.id);\n              props.setItemType !== undefined && props.setItemType(\"gateway\");\n            }}\n          ></TreeItem>\n          <TreeItem\n            key={mainList[1]}\n            nodeId={mainList[1]}\n            label={mainList[1]}\n          ></TreeItem>\n          <TreeItem\n            key={mainList[2]}\n            nodeId={mainList[2]}\n            label={mainList[2]}\n            onIconClick={() => {\n              if (expanded.includes(\"Strings\")) {\n                setExpanded([]);\n              } else {\n                setExpanded([\"Strings\"]);\n              }\n            }}\n          >\n            {idSerialNoOfString.map((idsn, index) => {\n              return (\n                <TreeItem\n                  key={idsn.serialNo}\n                  nodeId={\"String\" + idsn.id}\n                  label={\"String\" + idsn.id}\n                  onClick={() => {\n                    props.setStid(idsn.id);\n                    props.setItemType !== undefined &&\n                      props.setItemType(\"strings\");\n                  }}\n                  onIconClick={() => {\n                    if (expanded.includes(\"String\" + idsn.id)) {\n                      setExpanded([\"Strings\"]);\n                    } else {\n                      setExpanded([\"Strings\", \"String\" + idsn.id]);\n                    }\n                  }}\n                  onLabelClick={() => {\n                    if (expanded.includes(\"String\" + idsn.id)) {\n                      setExpanded([\"Strings\"]);\n                    } else {\n                      setExpanded([\"Strings\", \"String\" + idsn.id]);\n                    }\n                  }}\n                >\n                  {modules[index].map((nM, index2) => {\n                    return (\n                      <TreeItem\n                        key={nM}\n                        nodeId={\"Module\" + nM}\n                        label={\"Module\" + (index2 + 1)}\n                        onClick={() => {\n                          props.setSn(nM);\n                          props.setItemType !== undefined &&\n                            props.setItemType(\"modules\");\n                        }}\n                      />\n                    );\n                  })}\n                </TreeItem>\n              );\n            })}\n          </TreeItem>\n        </TreeView>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport \"./Detail.css\";\n\nconst Detail = (props) => {\n  function getGatewayData() {\n    let gatewayInfo = [];\n    if (props.gatewayData != null) {\n      const overview = props.gatewayData;\n      const tempKeys = Object.keys(overview).map((key) => {\n        return typeof overview[key] === \"object\"\n          ? [key + \"-\" + Object.keys(overview[key])[0]]\n          : [key];\n      });\n      const tempVals = Object.values(overview).map((val) => {\n        return typeof val === \"object\" ? [Object.values(val)[0]] : [val];\n      });\n      const tempData = Object.assign(\n        {},\n        ...tempKeys.map((n, index) => ({ [n]: tempVals[index] }))\n      );\n      gatewayInfo.push(\n        <div key=\"gtw_key\">\n          <font className=\"small-title\">Gateway</font>\n        </div>\n      );\n      gatewayInfo.push(\n        Object.keys(tempData).map((key, i) => {\n          if (key !== \"startTs\" && key !== \"endTs\") {\n            return (\n              <div key={key}>\n                {key}: {tempData[key]}\n              </div>\n            );\n          }\n        })\n      );\n    }\n    return gatewayInfo;\n  }\n\n  function getSelectedStringData() {\n    const strings = props.sampleData.sampleData.Strings.devices;\n    let stInfo = [];\n    strings.map((st) => {\n      if (st.info.id === props.selectedStid) {\n        const stringInfo = st.info;\n        stInfo.push(\n          <div key={\"String\"}>\n            <font className=\"small-title\">String</font>\n          </div>\n        );\n        stInfo.push(\n          Object.keys(stringInfo).map((key, index) => {\n            if (stringInfo[key] != null) {\n              return (\n                <div key={key}>\n                  {key}: {stringInfo[key]}\n                </div>\n              );\n            }\n          })\n        );\n      }\n    });\n    return stInfo;\n  }\n\n  function getSelectedModuleData() {\n    const strings = props.sampleData.sampleData.Strings.devices;\n    let stInfo = [];\n    strings.map((st) => {\n      if (st.info.serialNo === props.selectedSn) {\n        const stringInfo = st.info;\n        stInfo.push(\n          <div key={\"String\"}>\n            <font className=\"small-title\">String</font>\n          </div>\n        );\n        stInfo.push(\n          Object.keys(stringInfo).map((key, index) => {\n            if (stringInfo[key] != null) {\n              return (\n                <div key={key}>\n                  {key}: {stringInfo[key]}\n                </div>\n              );\n            }\n          })\n        );\n      }\n    });\n    const modules = strings.map((st) => {\n      const tempData = Object.assign(\n        {},\n        { stringInfo: st.info },\n        { modules: st.Modules.devices }\n      );\n      return tempData;\n    });\n    modules.map((module) => {\n      module.modules.map((m) => {\n        if (m.moduleSerial === props.selectedSn) {\n          const stringInfo = module.stringInfo;\n          stInfo.push(\n            <div key={\"String\"}>\n              <font className=\"small-title\">String</font>\n            </div>\n          );\n          stInfo.push(\n            Object.keys(stringInfo).map((key) => {\n              if (stringInfo[key] != null) {\n                return (\n                  <div key={key}>\n                    {key}: {stringInfo[key]}\n                  </div>\n                );\n              }\n            })\n          );\n          stInfo.push(\n            <div key={\"Module\"}>\n              <font className=\"small-title\">Module</font>\n            </div>\n          );\n          stInfo.push(\n            <div key={m.moduleSerial}>\n              {\"moduleSerial\"}: {m.moduleSerial}\n            </div>\n          );\n        }\n      });\n    });\n    return stInfo;\n  }\n\n  return (\n    <div className=\"card shadow mb-4\" style={{ marginRight: 20 }}>\n      <div className=\"card-header py-2\">Detail Information</div>\n      <div className=\"card-body\">\n        {getGatewayData()}\n        {props.selectedStid ? getSelectedStringData() : getSelectedModuleData()}\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { forwardRef } from \"react\";\nimport \"../../styles/colors.css\";\nimport __WEBPACK_EXTERNAL_MODULE__0__ from \"react-map-interaction\";\n\nconst Module = forwardRef(\n  ({ stringIndex, index, setSn, mSerialNo, checked, data }, ref) => {\n    return (\n      <div\n        className=\"card shadow m-lg-2 text-center\"\n        style={{\n          display: \"block\",\n          backgroundColor: data\n            ? \"var(--lev\" + parseInt(data[0].modulewatt / 20) + \")\"\n            : \"white\",\n          backgroundImage:\n            \"linear-gradient(rgba(255,255,255,.5) 2px, transparent 2px), linear-gradient(90deg, rgba(255,255,255,.5) 2px, transparent 2px), linear-gradient(rgba(255,255,255,.28) 2px, transparent 2px), linear-gradient(90deg, rgba(255,255,255,.28) 2px, transparent 2px)\",\n          backgroundSize: \"20px 20px, 20px 20px\",\n          backgroundPosition: \"-2px -2px, -2px -2px\",\n          fontWeight: \"500\",\n          //width: \"80px\",\n        }}\n        onClick={() => setSn(mSerialNo)}\n      >\n        <div\n          className={\"card-body \" + (checked && \" selected\")}\n          ref={ref}\n          tabIndex={[stringIndex * 30 + index + 1]}\n          style={{ minWidth: \"81px\" }}\n        >\n          M{index + 1}\n          <br />\n          {data && data[0].modulewatt}W\n          <br />\n          {data && data[0].modulevoltage}V\n          <br />\n          {data && data[0].moduletemperature}℃\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Module;\n","export default function groupBy(list, keyGetter) {\n    const map = new Map();\n    list.forEach((item) => {\n      const key = keyGetter(item);\n      const collection = map.get(key);\n      if (!collection) {\n        map.set(key, [item]);\n      } else {\n        collection.push(item);\n      }\n    });\n    return map;\n  }","import React, { forwardRef, useState, useEffect } from \"react\";\nimport Module from \"./Module\";\nimport \"../../styles/common.css\";\nimport groupBy from \"./groupBy\";\n\nconst String = forwardRef((props, ref) => {\n  let data = props.data;\n\n  const [grouped, setGrouped] = useState(null);\n  useEffect(() => {\n    if (data) {\n      setGrouped(groupBy(data, (d) => d.md_sn));\n    }\n  }, [data]);\n\n  if (grouped == null) return <></>;\n\n  return (\n    <>\n      <div>\n        <div\n          className=\"row justify-content-left\"\n          style={{ marginLeft: \"10px\", marginRight: \"10px\" }}\n        >\n          <div className=\"d-flex\">\n            <div\n              className={\n                \"card border-left-primary shadow m-lg-2 text-center \" +\n                (props.checked && \" selected\")\n              }\n              onClick={() => props.setStid(props.stid)}\n              style={{\n                fontWeight: \"500\",\n                //width: \"80px\",\n              }}\n            >\n              <div\n                className=\"card-body\"\n                tabIndex={[(props.i + 1) * 31]}\n                style={{ minWidth: \"81px\" }}\n              >\n                S{props.i + 1}\n                <br />\n                {data && data[0].stringwatt}W\n                <br />\n                {data && data[0].stringvoltage}V\n                <br />\n                {data && data[0].stringtemperature}℃\n              </div>\n            </div>\n            {props.module.map((j, index) =>\n              props.selectedSn === j ? (\n                <Module\n                  stringIndex={props.i + 1}\n                  index={index}\n                  key={index}\n                  setSn={props.setSn}\n                  mSerialNo={j}\n                  checked={true}\n                  ref={ref}\n                  data={grouped.get(Number(j))}\n                />\n              ) : (\n                <Module\n                  stringIndex={props.i + 1}\n                  index={index}\n                  key={index}\n                  setSn={props.setSn}\n                  mSerialNo={j}\n                  checked={false}\n                  data={grouped.get(Number(j))}\n                />\n              )\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default String;\n","import React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport String from \"./String\";\nimport \"./Layout.css\";\nimport groupBy from \"./groupBy\";\nimport { MapInteractionCSS } from \"react-map-interaction\";\n\nconst Layout = forwardRef((props, ref) => {\n  const data = props.data;\n  const sample = props.sampleData.sampleData;\n  const [grouped, setGrouped] = useState(null);\n\n  useEffect(() => {\n    if (data) {\n      setGrouped(groupBy(data, (strings) => strings.st_id));\n    }\n  }, [data]);\n\n  let gateway = sample.Gateway.devices[0];\n  let strings = sample.Strings;\n  let idOfString = strings.devices.map((device) => device.info.id);\n  let modules = strings.devices.map((device) =>\n    device.Modules.devices.map((mS) => mS.moduleSerial)\n  );\n  const scrollEl = useRef(null);\n  // useEffect(() => {\n  //   if (ref.current != null) {\n  //     let tabIndexX = ref.current.tabIndex%30;\n  //     let tabIndexY = parseInt(ref.current.tabIndex/30);\n  //     console.log(tabIndexX, tabIndexY);\n  //     let positionX = 0;\n  //     if (tabIndexX > 6)\n  //       positionX = ref.current.clientWidth * (tabIndexX - 6) * 13 / 10;\n  //     let positionY = 0;\n  //     if(tabIndexY > 2)\n  //       positionY = ref.current.clientHeight * (tabIndexY - 2) * 5/4;\n  //     // console.log(positionX, positionY);\n  //     scrollEl.current.scrollTo(positionX, positionY);\n  //   }\n  // }, [props.selectedSn]);\n\n  if (grouped == null) return;\n\n  // const [translationBounds, setTranslationBounds] = useState({\n  //   xMin: -1000,\n  //   xMax: 1000,\n  //   yMin: -1000,\n  //   yMax: 1000,\n  // });\n  // const [scale, setScale] = useState(0.42);\n\n  // useEffect(() => {\n  //   console.log(scale);\n  // }, [scale]);\n\n  //console.log(props.selectedGtid, gateway.id);\n  return (\n    <>\n      <div\n        className=\"card custom-shadow mb-4\"\n        style={{\n          height: \"25%\",\n        }}\n      >\n        <div className=\"card-header py-2\">Logical Layout cards</div>\n        <div className=\"card-body d-flex\" style={{ padding: \"0.5rem\" }}>\n          <div\n            className={\n              \"card custom-shadow d-flex justify-content-center text-center \" +\n              (props.selectedGtid === gateway.id && \" selected\")\n            }\n            style={{\n              marginRight: 10,\n              padding: 10,\n              fontSize: 12,\n              width: \"8%\",\n              fontWeight: \"500\",\n              // backgroundColor: data\n              //   ? \"var(--lev1\" +\n              //     parseInt(grouped.get(idOfString[0])[0].totalwatt / 10) +\n              //     \")\"\n              //   : \"white\",\n            }}\n            onClick={() => props.setGtid(gateway.id)}\n          >\n            <span>Gateway</span>\n            {grouped.get(idOfString[0])[0].totalwatt}W\n          </div>\n          <div style={{ width: \"92%\" }}>\n            <MapInteractionCSS\n              defaultValue={{ scale: 0.4, translation: { x: 1, y: 1 } }}\n              minScale={0.4}\n              showControls={true}\n              btnClass=\"resize-btn\"\n              // onChange={setScale(this.scale)}\n            >\n              <div\n                className=\"col\"\n                style={{\n                  flexWrap: \"nowrap\",\n                }}\n                ref={scrollEl}\n              >\n                {idOfString.map((id, i) =>\n                  props.selectedStid === id ? (\n                    <String\n                      i={i}\n                      key={i}\n                      module={modules[i]}\n                      setSn={props.setSn}\n                      setStid={props.setStid}\n                      stid={id}\n                      checked={true}\n                      selectedSn={props.selectedSn}\n                      ref={ref}\n                      data={grouped.get(id)}\n                    />\n                  ) : (\n                    <String\n                      i={i}\n                      key={i}\n                      module={modules[i]}\n                      setSn={props.setSn}\n                      setStid={props.setStid}\n                      stid={id}\n                      checked={false}\n                      selectedSn={props.selectedSn}\n                      ref={ref}\n                      data={grouped.get(id)}\n                    />\n                  )\n                )}\n              </div>\n            </MapInteractionCSS>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default Layout;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst TLChart = (props) => {\n  const [isPlaying, setPlay] = useState(false);\n  const [intervalId, setIntervalId] = useState(0);\n\n  let chart = useRef(null);\n\n  // helper function to remove duplicate arrays\n  let unique = (arr) => {\n    var uniques = [];\n    var itemsFound = {};\n    for (var i = 0, l = arr.length; i < l; i++) {\n      var stringified = JSON.stringify(arr[i]);\n      if (itemsFound[stringified]) {\n        continue;\n      }\n      uniques.push(arr[i]);\n      itemsFound[stringified] = true;\n    }\n    return uniques;\n  };\n\n  let myData = unique(props.graphData);\n\n  useEffect(() => {\n    chart = chart.current.chart;\n  });\n\n  useEffect(() => {\n    // console.log(chart.xAxis[0])\n    // props.graphData[0] ? console.log(props.graphData[0][0]) : console.log(\"no graph data\")\n    // props.graphData[0] ? console.log(props.graphData[props.graphData.length-1][0]) : console.log(\"no graph data\")\n    chart.xAxis[0].setExtremes(\n      props.graphData[0] ? props.graphData[0][0] : 0,\n      props.graphData[0] ? props.graphData[props.graphData.length - 1][0] : 0\n    );\n    // if (chart.xAxis) {\n    //   chart.xAxis[0].setExtremes(\n    //     props.graphData[0][0], props.graphData[props.graphData.length][0]\n    //   )\n    // }\n  }, [props.graphData]);\n\n  const titleName = (myProps) => {\n    switch(myProps.timeRange) {\n      case \"day\":\n        return {\n          text: \"Average Watt per 15 min of day: \" + (new Date(myProps.curDate - 86400000)).toISOString().slice(0, 10)\n        }\n      case \"week\":\n        return {\n          text: \"Average Watt per hour of week: \" + (new Date(myProps.curDate - (7*86400000))).toISOString().slice(0, 10) + \" ~ \" + (new Date(myProps.curDate - 86400000)).toISOString().slice(0, 10)\n        }\n      case \"month\":\n        return {\n          text: \"Average Watt per day of month: \" + (new Date(myProps.curDate - (28*86400000))).toISOString().slice(0, 7)\n        }\n      default:\n        return {\n          text: \"\"\n        }\n    }\n  };\n\n  const options = {\n    chart: {\n      type: \"spline\",\n    },\n    title: titleName(props),\n    rangeSelector: {\n      enabled: false,\n    },\n    navigator: {\n      enabled: false,\n    },\n    xAxis: {\n      type: \"datetime\",\n      // tickInterval: newTick(props.timeRange),\n      plotLines: [\n        {\n          value: myData[0],\n          color: \"red\",\n          width: 2,\n          id: 0,\n          zIndex: 10,\n          label: {\n            text: myData[0] ? myData[0][1] : null,\n            align: \"right\",\n            x: -10,\n            y: 16,\n            rotation: 0,\n          },\n        },\n      ],\n    },\n    series: [\n      {\n        data: myData,\n        marker: {\n          enabled: false,\n        },\n        type: \"area\",\n      },\n    ],\n    plotOptions: {\n      series: {\n        point: {\n          events: {\n            mouseOver: function () {\n              const point = { x: this.x, y: this.y };\n              props.setPoint([point.x, point.y]);\n            },\n          },\n        },\n      },\n      area: {\n        marker: {\n          states: {\n            hover: {\n              enabled: true,\n            },\n          },\n        },\n      },\n    },\n  };\n\n  const playAxis = (chart) => {\n    setPlay(!isPlaying);\n    let i = 0;\n    let endIdx = myData.length;\n    if (!isPlaying) {\n      let intId = setInterval(() => {\n        setIntervalId(intId);\n        if (i < endIdx && chart.xAxis) {\n          chart.xAxis[0].addPlotLine({\n            value: [myData[i][0]] ? [myData[i][0]] : 0,\n            color: \"red\",\n            width: 2,\n            id: i,\n            zIndex: 10,\n            label: {\n              text: myData[i][1],\n              align: \"right\",\n              x: -10,\n              y: 16,\n              rotation: 0,\n            },\n          });\n          chart.xAxis[0].removePlotLine(i - 1);\n          props.setPoint([myData[i][0], myData[i][1]]);\n        } else {\n          clearInterval(intervalId);\n        }\n        i++;\n      }, 400);\n    } else {\n      clearInterval(intervalId);\n    }\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        options={options}\n        ref={chart}\n      />\n      <button\n        onClick={() => {\n          playAxis(chart);\n        }}\n        style={{ alignSelf: \"flex-start\" }}\n      >\n        {isPlaying ? (\n          <FontAwesomeIcon icon={faStop} size=\"2x\" />\n        ) : (\n          <FontAwesomeIcon icon={faPlay} size=\"2x\" />\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default React.memo(TLChart);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Highcharts from \"highcharts\";\nimport TLChart from \"./TLChart\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\n// props - timeRange selectedStid selectedSn data\nconst TimeLapse = (props) => {\n  // console.log(props.data)\n  const [curPoint, setPoint] = useState([0, 0]);\n  const [graphData, setGraphData] = useState([]);\n  // const [curDate, setDate] = useState(new Date());\n  const [weekDates, setWeekDates] = useState([new Date()]);\n\n  useEffect(() => {\n    let tempDates = [];\n    for (let i = 1; i < 8; i++) {\n      tempDates.push(new Date(props.curDate-(i*86400000)))\n    }\n    setWeekDates(tempDates);\n  }, [props.curDate])\n\n  useEffect(() => {\n    if (curPoint[0] !== 0) props.setCurTime(curPoint[0].toString());\n  }, [curPoint]);\n\n  // useRef to store previous props value for both st_id and sn\n  const prevStidRef = useRef(null);\n  const prevSnRef = useRef(null);\n  useEffect(() => {\n    prevStidRef.current = props.selectedStid;\n    prevSnRef.current = props.selectedSn;\n  });\n  const prevStid = prevStidRef.current;\n  const prevSn = prevSnRef.current;\n\n  useEffect(() => {\n    if (props.selectedGtid && !props.selectedSn && !props.selectedStid) {\n      // console.log(props.selectedGtid, props.selectedStid, props.selectedSn)\n      // console.log(\"initial!\")\n      let temp = [];\n      for (let i = 0; i < props.data.length; i++) {\n        temp.push([Number(props.data[i].endts), props.data[i].totalwatt]);\n      }\n      setGraphData(temp);\n    }\n    // move module-module\n    else if (prevStid !== props.selectedStid && prevSn === null) {\n      // console.log(props.selectedGtid, props.selectedStid, props.selectedSn)\n      let temp = [];\n      for (let i = 0; i < props.data.length; i++) {\n        if (props.data[i].st_id === Number(props.selectedStid)) {\n          temp.push([Number(props.data[i].endts), props.data[i].stringwatt]);\n        }\n      }\n      setGraphData(temp);\n    }\n    // move string-string\n    else if (prevSn !== props.selectedSn && prevStid === null) {\n      // console.log(props.selectedGtid, props.selectedStid, props.selectedSn)\n      let temp = [];\n      for (let i = 0; i < props.data.length; i++) {\n        if (props.data[i].md_sn === Number(props.selectedSn)) {\n          temp.push([Number(props.data[i].endts), props.data[i].modulewatt]);\n        }\n      }\n      setGraphData(temp);\n    }\n    // move module-string\n    else if (prevStid === props.selectedStid && props.selectedSn === null) {\n      // console.log(props.selectedGtid, props.selectedStid, props.selectedSn)\n      let temp = [];\n      for (let i = 0; i < props.data.length; i++) {\n        if (props.data[i].st_id === Number(props.selectedStid)) {\n          temp.push([Number(props.data[i].endts), props.data[i].stringwatt]);\n        }\n      }\n      setGraphData(temp);\n    }\n    // move string-module\n    else if (prevSn === props.selectedSn && props.selectedStid === null) {\n      // console.log(props.selectedGtid, props.selectedStid, props.selectedSn)\n      let temp = [];\n      for (let i = 0; i < props.data.length; i++) {\n        if (props.data[i].md_sn === Number(props.selectedSn)) {\n          temp.push([Number(props.data[i].endts), props.data[i].modulewatt]);\n        }\n      }\n      setGraphData(temp);\n    }\n  }, [props.selectedStid, props.selectedSn, props.data]);\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-body\">\n        <div\n          className=\"d-flex justify-content-around\"\n          style={{ width: \"100%\" }}\n        >\n          <Button color=\"primary\" style={props.timeRange === \"day\" ? { backgroundColor: \"#007bff\", color: \"white\" } : {}} outline onClick={() => props.setTimeRange(\"day\")}>Day</Button>\n          <Button color=\"primary\" style={props.timeRange === \"week\" ? { backgroundColor: \"#007bff\", color: \"white\" } : {}} outline onClick={() => props.setTimeRange(\"week\")}>Week</Button>\n          <Button color=\"primary\" style={props.timeRange === \"month\" ? { backgroundColor: \"#007bff\", color: \"white\" } : {}} outline onClick={() => props.setTimeRange(\"month\")}>Month</Button>\n        </div>\n        <div className=\"d-flex justify-content-start m-3\">\n          {props.timeRange === \"week\" ? <DatePicker\n            selected={props.curDate}\n            onChange={date => props.setcurDate(date)}\n            highlightDates={weekDates}\n            /> : (props.timeRange === \"month\" ? <DatePicker\n                  selected={props.curDate}\n                  onChange={date => props.setcurDate(date)}\n                  dateFormat=\"MM/yyyy\"\n                  showMonthYearPicker\n                /> : <DatePicker\n                      selected={props.curDate}\n                      onChange={date => props.setcurDate(date)}\n                      />\n                  )\n          }\n        </div>\n        <TLChart\n          highcharts={Highcharts}\n          setPoint={setPoint}\n          timeRange={props.timeRange}\n          curDate={props.curDate}\n          selectedSn={props.selectedSn}\n          selectedStid={props.selectedStid}\n          graphData={graphData}\n        />\n        {/* <p>\n          Time is: {curPoint[0]} and power is: {curPoint[1]}\n        </p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default TimeLapse;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport List from \"./List\";\nimport Detail from \"./Detail\";\nimport Layout from \"./Layout\";\nimport TimeLapse from \"./TimeLapse\";\nimport { faNetworkWired } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { Spinner } from \"reactstrap\";\nimport groupBy from \"./groupBy\";\n\nconst Logical = (props) => {\n  // gt_id of current gateway\n  const [selectedGtid, setGtid] = useState(props.gatewayId);\n  // st_id of selected string\n  const [selectedStid, setStid] = useState(null);\n  // sn of selected module\n  const [selectedSn, setSn] = useState(null);\n  // timeRange can be \"day\"/\"week\"/\"month\"\n  const [timeRange, setTimeRange] = useState(\"day\");\n\n  const [curTime, setCurTime] = useState(null);\n  const focusEl = useRef(null);\n\n  const [curDate, setcurDate] = useState(new Date(1588407606000));\n\n  const [data, setData] = useState(null);\n  const [gatewayData, setGatewayData] = useState(\n    props.sampleData.Gateway.devices[0]\n  );\n\n  const [timeGroupedData, setTimeGroupedData] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        //let url = \"/api/\" + selectedGtid + \"/\" + Date.now() + \"/\" + timeRange;\n        // 1588392795000 = Sat May 02 2020 13:13:15 GMT+0900 (Seoul), Sat May 02 2020 04:13:15 GMT+0000 (UTC)\n        // 1588431600000 = Sat May 03 2020 00:00:00 GMT+0900\n        let tempDate = String(curDate.getTime());\n        // console.log(curDate.getTime(), tempDate)\n        // switch (timeRange) {\n        //   case \"day\":\n        //     tempDate = String(curDate.getTime());\n        //     break;\n        //   case \"week\":\n        //     // Sat May 09 2020 13:13:15 GMT+0900 (Seoul), get data from hour table\n        //     tempDate = String(curDate.getTime());\n        //     break;\n        //   case \"month\":\n        //     tempDate = \"1590970696000\";\n        //     break;\n        //   default:\n        //     break;\n        // }\n        let url = \"/api/logical/\" + props.gatewayId + \"/\" + tempDate + \"/\" + timeRange;\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getData();\n  }, [timeRange, curDate]);\n\n  useEffect(() => {\n    if (selectedGtid) {\n      setStid(null);\n      setSn(null);\n    }\n  }, [selectedGtid]);\n\n  useEffect(() => {\n    if (selectedStid) {\n      setGtid(null);\n      setSn(null);\n    }\n  }, [selectedStid]);\n\n  useEffect(() => {\n    if (selectedSn) {\n      setGtid(null);\n      setStid(null);\n    }\n  }, [selectedSn]);\n\n  useEffect(() => {\n    // data가 변경되었고 빈 array가 아닌 경우 timeGroupedData 및 curTime 초기값 지정\n    if (data && data.length == 0) alert(\"해당 기간의 데이터가 없습니다.\");\n    else if (data && data.length > 0) {\n      setTimeGroupedData(groupBy(data, (d) => d.endts));\n      setCurTime(data[0].endts);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    // curTime이 변경되었고 null이 아닌 경우 timeGroupedData에서 해당 시간 가져옴\n    if (curTime) {\n      timeGroupedData.get(curTime);\n    }\n  }, [curTime]);\n\n  if (!data || !curTime || data === [])\n    return (\n      <div className=\"container-fluid h-100 d-flex justify-content-center align-items-center flex-column\">\n        <Spinner style={{ width: \"3rem\", height: \"3rem\" }} />\n        {\"Loading\"}\n      </div>\n    );\n\n  var arr = [];\n  for (var i = 0; i < 5; i++) arr[i] = i;\n  return (\n    <>\n      <br />\n      <div className=\"d-flex justify-content-end\">\n        <div\n          className=\"card float-right\"\n          style={{ width: \"35%\", marginRight: \"15px\" }}\n        >\n          <div style={{ display: \"flex\" }}>\n            {arr.map((index, i) => (\n              <div\n                key={i}\n                className=\"card-body text-center\"\n                style={{\n                  backgroundColor: `var(--lev${index})`,\n                  fontSize: 10,\n                  padding: \"2px\",\n                }}\n              >\n                ~{index * 20 + 19}W\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"container-fluid\" style={{ marginTop: \"15px\" }}>\n        {/* <div>\n        <h1 className=\"h3 mb-1 text-gray-800\">Logical Layout</h1>\n      </div> */}\n        <div className=\"d-flex\">\n          <div>\n            <List\n              sampleData={props}\n              setGtid={setGtid}\n              setStid={setStid}\n              setSn={setSn}\n              selectedGtid={selectedGtid}\n              selectedStid={selectedStid}\n              selectedSn={selectedSn}\n              setGatewayData={setGatewayData}\n            />\n            <Detail\n              sampleData={props}\n              selectedStid={selectedStid}\n              selectedSn={selectedSn}\n              gatewayData={gatewayData}\n            />\n          </div>\n          <div\n            style={{\n              overflow: \"auto\",\n              flex: 1,\n            }}\n          >\n            <Layout\n              sampleData={props}\n              //data={data}\n              setGtid={setGtid}\n              setStid={setStid}\n              setSn={setSn}\n              selectedGtid={selectedGtid}\n              selectedStid={selectedStid}\n              selectedSn={selectedSn}\n              ref={focusEl}\n              //curTime={curTime}\n              data={timeGroupedData.get(curTime)}\n            />\n            <TimeLapse\n              setTimeRange={setTimeRange}\n              timeRange={timeRange}\n              selectedStid={selectedStid}\n              selectedSn={selectedSn}\n              selectedGtid={selectedGtid}\n              data={data}\n              setCurTime={setCurTime}\n              curDate={curDate}\n              setcurDate={setcurDate}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Logical;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./chart.css\";\n\nconst GPChart = (props) => {\n  const [chartData, setChartData] = useState(null);\n  const [chartTitle, setChartTitle] = useState(\"\");\n\n  let chart = useRef(null);\n  useEffect(() => {\n    chart = chart.current.chart;\n  });\n\n  useEffect(() => {\n    setChartData([props.data]);\n    setChartTitle(props.data.name);\n    chart.xAxis[0].setExtremes(\n      props.data.data[0] ? props.data.data[0][0] : 0,\n      props.data.data[0] ? props.data.data[props.data.data.length - 1][0] : 0\n    );\n  }, [props.data]);\n\n  const options = {\n    chart: {\n      type: \"column\",\n      // margin: 0,\n      // width: 1000,\n    },\n    title: {\n      text: props.data.name,\n    },\n    series: [\n      {\n        name: props.data.name,\n        data: props.data.data,\n      },\n    ],\n    rangeSelector: {\n      enabled: true,\n      buttons: [],\n      verticalAlign: \"top\",\n      buttonPosition: {\n        align: \"right\",\n      },\n      inputPosition: {\n        align: \"left\",\n      },\n    },\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        day: \"%y-%b-%e\",\n      },\n      //categories: props.data.xcategories,\n    },\n    /*navigator: {\n      enabled: false,\n    },*/\n    colors: [\"#00A6D6\", \"#002E54\"],\n    plotOptions: {\n      series: {\n        point: {\n          events: {\n            mouseOver: function () {\n              const point = { x: this.x, y: this.y };\n              console.log(point);\n              props.setPoint([\n                new Date(point.x).toISOString().split(\"T\")[0],\n                //props.data.xcategories[point.x],\n                point.y,\n              ]);\n            },\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        options={options}\n        ref={chart}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(GPChart);\n","import React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport GPChart from \"./GPChart\";\n\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Breadcrumb,\n  BreadcrumbItem,\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nconst GraphDetail = (props) => {\n  const [curPoint, setPoint] = useState([\"\", 0]);\n  const [activeTab, setActiveTab] = useState(1);\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const unitToggle = (evt) => {\n    evt.preventDefault();\n    props.setTimeRange(evt.target.innerText);\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-2\">Graph</div>\n      <div className=\"card-body\">\n        {/*<div>\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\n            {props.timeRange === \"day\" ? (\n              <BreadcrumbItem active onClick={unitToggle}>\n                day\n              </BreadcrumbItem>\n            ) : (\n              <BreadcrumbItem onClick={unitToggle}>day</BreadcrumbItem>\n            )}\n            {props.timeRange === \"week\" ? (\n              <BreadcrumbItem active onClick={unitToggle}>\n                week\n              </BreadcrumbItem>\n            ) : (\n              <BreadcrumbItem onClick={unitToggle}>week</BreadcrumbItem>\n            )}\n            {props.timeRange === \"month\" ? (\n              <BreadcrumbItem active onClick={unitToggle}>\n                month\n              </BreadcrumbItem>\n            ) : (\n              <BreadcrumbItem onClick={unitToggle}>month</BreadcrumbItem>\n            )}\n          </Breadcrumb>\n            </div>*/}\n        <Nav tabs>\n          {props.data != null &&\n            Array.from(props.data).map((d, idx) => {\n              return (\n                <NavItem key={idx + 1}>\n                  <NavLink\n                    className={classnames({ active: activeTab === idx + 1 })}\n                    onClick={() => {\n                      toggle(idx + 1);\n                    }}\n                  >\n                    {d.name}\n                  </NavLink>\n                </NavItem>\n              );\n            })}\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          {props.data != null &&\n            Array.from(props.data).map((d, idx) => {\n              return (\n                <TabPane tabId={idx + 1} key={idx + 1}>\n                  <Row>\n                    <Col sm=\"12\">\n                      <div className=\"d-flex chartWrapper\">\n                        <GPChart\n                          highcharts={Highcharts}\n                          setPoint={setPoint}\n                          data={d}\n                          selectedItemType={props.selectedItemType}\n                        ></GPChart>\n                        <p>\n                          Time is:{\" \"}\n                          {curPoint[0] !== \"\"\n                            ? curPoint[0]\n                            : new Date().toDateString()}{\" \"}\n                          and power is: {curPoint[1]}\n                        </p>\n                      </div>\n                    </Col>\n                  </Row>\n                </TabPane>\n              );\n            })}\n        </TabContent>\n      </div>\n    </div>\n  );\n};\n\nexport default GraphDetail;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"../logical/List\";\nimport GraphD from \"./GraphDetail\";\nimport axios from \"axios\";\n\nconst Graph = (props) => {\n  // gt_id of current gateway\n  const [selectedGtid, setGtid] = useState(props.gatewayId);\n  // st_id of selected string\n  const [selectedStid, setStid] = useState(null);\n  // sn of selected module\n  const [selectedSn, setSn] = useState(null);\n  // timeRange can be \"day\"/\"week\"/\"month\"\n  const [timeRange, setTimeRange] = useState(\"day\");\n\n  const [selectedItemType, setItemType] = useState(\"\");\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let url = \"/api/graph/\" + \"gateway\" + \"/\";\n        if (selectedItemType === \"gateway\") {\n          url += selectedGtid + \"/\" + timeRange;\n          const response = await axios.get(url);\n          setData([\n            {\n              name: \"totalwh delta\",\n              data: response.data.map((d) => [\n                Number(d.endts),\n                d.totalwh_delta,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n            {\n              name: \"watt average\",\n              data: response.data.map((d) => [Number(d.endts), d.watt_avg]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n          ]);\n          setStid(null);\n          setSn(null);\n        } else if (selectedItemType === \"strings\") {\n          url = \"/api/graph/\" + \"strings\" + \"/\";\n          url += selectedStid + \"/\" + timeRange;\n          const response = await axios.get(url);\n          setData([\n            {\n              name: \"totalwh\",\n              data: response.data.map((d) => [Number(d.endts), d.totalwh]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n            {\n              name: \"totalwh delta\",\n              data: response.data.map((d) => [\n                Number(d.endts),\n                d.totalwh_delta,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n            {\n              name: \"watt average\",\n              data: response.data.map((d) => [\n                Number(d.endts),\n                d.stringwatt_avg,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n            {\n              name: \"voltage average\",\n              data: response.data.map((d) => [\n                Number(d.endts),\n                d.stringvoltage_avg,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n            {\n              name: \"temperature average\",\n              data: response.data.map((d) => [\n                Number(d.endts),\n                d.temperature_avg,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n          ]);\n          setGtid(null);\n          setSn(null);\n        } else if (selectedItemType === \"modules\") {\n          url = \"/api/graph/\" + \"modules\" + \"/\";\n          url += selectedSn + \"/\" + timeRange;\n          const response = await axios.get(url);\n          setData([\n            {\n              name: \"watt average\",\n              data: response.data.map((d) => [\n                //Number(d.endts),\n                d.modulewatt_avg,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n            {\n              name: \"voltage average\",\n              data: response.data.map((d) => [\n                //Number(d.endts),\n                d.modulevoltage_avg,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n            {\n              name: \"temperature average\",\n              data: response.data.map((d) => [\n                //Number(d.endts),\n                d.moduletemperature_avg,\n              ]),\n              xcategories: response.data.map((d) => [\n                new Date(Number(d.endts)).toUTCString(),\n              ]),\n            },\n          ]);\n          setGtid(null);\n          setStid(null);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getData();\n  }, [selectedItemType, selectedGtid, selectedStid, selectedSn, timeRange]);\n\n  useEffect(() => {\n    setItemType(\"gateway\");\n  }, []);\n\n  return (\n    <div\n      className=\"container-fluid\"\n      style={{ marginTop: \"15px\", width: \"100%\" }}\n    >\n      {/*<div>/*<h1 className=\"h3 mb-1 text-gray-800\">Graph</h1></div>*/}\n      <div className=\"d-flex\" style={{ width: \"100%\" }}>\n        <div style={{ flexGrow: 1 }}>\n          <List\n            sampleData={props}\n            setGtid={setGtid}\n            setStid={setStid}\n            setSn={setSn}\n            selectedStid={selectedStid}\n            selectedSn={selectedSn}\n            setData={setData}\n            setItemType={setItemType}\n          />\n        </div>\n        <div style={{ flexGrow: 2 }}>\n          <GraphD\n            data={data}\n            selectedItemType={selectedItemType}\n            timeRange={timeRange}\n            setTimeRange={setTimeRange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Graph;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport \"../../styles/common.css\";\nimport System from \"../system/System\";\nimport Logical from \"../logical/Logical\";\nimport Graph from \"../graph/Graph\";\nimport axios from \"axios\";\n//import first from \"../../first.json\";\n\nconst MainFrame = () => {\n  const [systemData, setSystemData] = useState(null);\n  const [navOpen, setNavOpen] = useState(true);\n  const gatewayId = \"1\";\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await axios.get(\"/api/\" + gatewayId);\n        const jsonObj = JSON.parse(JSON.parse(response.data.information));\n        setSystemData(jsonObj);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getData();\n  }, []);\n\n  // useEffect(() => {\n  //   if (first) {\n  //     const jsonObj = JSON.parse(JSON.parse(first.information));\n  //     setSystemData(jsonObj);\n  //   }\n  // }, [first]);\n\n  const TABS = (\n    <Switch>\n      <Route path=\"/system\" render={() => <System sampleData={systemData} gatewayId={gatewayId}/>} />\n      <Route\n        path=\"/logical\"\n        render={() => <Logical sampleData={systemData} gatewayId={gatewayId} />}\n      />\n      <Route\n        path=\"/graph\"\n        render={() => <Graph sampleData={systemData} gatewayId={gatewayId} />}\n      />\n    </Switch>\n  );\n\n  return (\n    <>\n      <Header setNavOpen={setNavOpen} navOpen={navOpen} />\n      <div className=\"d-flex\">\n        <Navbar\n          name=\"John\"\n          location=\"서울특별시 중구\"\n          navOpen={navOpen}\n        ></Navbar>\n        <div style={{ flex: 1, overflow: \"auto\", backgroundColor: \"#f8f9fc\" }}>\n          {systemData ? TABS : <p>No Data Found</p>}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\nexport default MainFrame;\n","import React from \"react\";\nimport MainFrame from \"./components/mainFrame/MainFrame\";\nimport \"./App.css\";\nimport { Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <MainFrame />\n      <Redirect to=\"/system\"></Redirect>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}